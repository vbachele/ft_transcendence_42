version: "3.8"

services:
  nginx:
    container_name: nginx
    image: nginx
    ports:
      - "443:443"
    networks:
      - ft_transcendence
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - frontend_dist:/usr/share/nginx/html
    depends_on:
      - backend
      - frontend
    restart: always

  backend:
    container_name: backend
    build:
      context: ./backend
      target: production 
        #command: node dist/main
        #volumes:
      #- ./backend:/usr/src/app
      #- /usr/src/app/node_modules
    ports:
      - ${SERVER_PORT}:${SERVER_PORT}
        #command: npm run start
    env_file:
      - .env
    networks:
      - ft_transcendence
    depends_on:
      - postgres
    stdin_open: true
    restart: always

  frontend:
    container_name: frontend
    build:
      context: ./frontend
      target: production 
    volumes:
      - frontend_dist:/usr/src/app/dist
        #- /usr/src/app/node_modules
        #ports:
        #- ${FRONTEND_PORT}:${FRONTEND_PORT}
        #command: npm run
    env_file:
      - .env
    networks:
      - ft_transcendence
    depends_on:
      - backend
    stdin_open: true
    restart: always

  postgres:
    container_name: database
    image: postgres:15
    env_file:
      - .env
    ports:
      - "5432:5432"
    networks:
      - ft_transcendence
    volumes:
      - postgres:/var/lib/postgresql/data/

  adminer:
    container_name: adminer
    image: adminer
    restart: always
    ports:
      - "6080:6080"
    networks:
      - ft_transcendence

networks:
  ft_transcendence:
    driver: bridge

volumes:
  postgres:
  frontend_dist:
